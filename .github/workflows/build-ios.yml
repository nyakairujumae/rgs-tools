name: Build iOS IPA

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allow manual trigger

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      - name: Run tests
        run: flutter test --no-sound-null-safety || true

      - name: Set up Ruby for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          working-directory: ios

      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update

      - name: Build iOS app (Debug)
        run: |
          flutter build ios --debug --no-codesign --no-sound-null-safety
        
      - name: Create IPA (Ad-Hoc)
        run: |
          cd ios
          mkdir -p Payload
          cp -r build/ios/iphoneos/Runner.app Payload/
          zip -r RGS-Tools-Debug.ipa Payload
          
      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: RGS-Tools-iOS-Debug
          path: ios/RGS-Tools-Debug.ipa
          retention-days: 30

      - name: Create Release (on tag push)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: ios/RGS-Tools-Debug.ipa
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to TestFlight (Optional)
        if: false # Enable this when you have certificates set up
        run: |
          # Requires Apple Developer certificates and provisioning profiles
          # flutter build ipa --release
          # xcrun altool --upload-app --type ios --file build/ios/ipa/*.ipa \
          #   --apiKey ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }} \
          #   --apiIssuer ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}

